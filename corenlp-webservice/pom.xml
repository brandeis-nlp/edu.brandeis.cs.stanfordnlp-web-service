<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>edu.brandeis.lapps</groupId>
        <artifactId>corenlp</artifactId>
        <version>2.2.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>corenlp-webservice</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>edu.brandeis.lapps</groupId>
            <artifactId>corenlp-base</artifactId>
            <!-- always use the same version as the underlying wrapper package -->
            <version>${project.parent.version}</version>
        </dependency>

        <!-- instead of inheriting, we import lapps war-parent-pom as a dependency -->
        <dependency>
            <groupId>org.lappsgrid.maven</groupId>
            <artifactId>war-parent-pom</artifactId>
            <version>2.2.0</version>
            <type>pom</type>
        </dependency>
    </dependencies>

    <build>

        <!-- final name is different from artifact id for backward compatibility -->
        <finalName>stanfordnlp-web-service#${project.version}</finalName>

        <!-- jetty is configured as a plugin in the org.lappsgrid.maven.war-parent-pom,
        but using it as a dependency (in 'import' scope) would not import plugins.
        So we need to explicitly configure jetty. -->
        <plugins>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.26</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <outputDirectory>${session.executionRootDirectory}</outputDirectory>
                </configuration>
            </plugin>
        </plugins>

    </build>


</project>
